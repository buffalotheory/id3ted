#!/bin/sh
# Bryant Hansen

# writable fields generated by:
# ./id3ted --frame-list | grep "^\ \ \*" | while read a b c ; do echo $b ; done > writable_fields.lst

ME="$(basename "$0")"
USAGE="${ME} [ test_directory ]"

TEST_DIR="/tmp/"
[[ "$2" ]] && TEST_DIR="$2"
ORIGINAL_MEDIA_DIR="${TEST_DIR}/original_media"

# functions
function TRACE() {
	echo -e "$(date "+%Y%m%d_%H%M%S") ${ME}: $1" >&2
}


if [[ ! -d "$ORIGINAL_MEDIA_DIR" ]] ; then
	mkdir -p "$ORIGINAL_MEDIA_DIR"
fi
if [[ ! -d "$ORIGINAL_MEDIA_DIR" ]] ; then
	echo "ERROR: failed to find or create ORIGINAL_MEDIA_DIR $ORIGINAL_MEDIA_DIR" >&2
	exit 2
fi

# randomly-selected, relatively-short mp3 with free license
#wget http://freemusicarchive.org/music/download/e263a939f306c27e29cdbbd0a8b11a380b2d5628
MP3_URL="http://freemusicarchive.org/music/download/e263a939f306c27e29cdbbd0a8b11a380b2d5628"
MP3_FILE="${ORIGINAL_MEDIA_DIR}/e263a939f306c27e29cdbbd0a8b11a380b2d5628"
if [[ ! -f "${MP3_FILE}" ]] ; then
	if ! pushd "$ORIGINAL_MEDIA_DIR" ; then
		echo "ERROR: failed to change directory to ORIGINAL_MEDIA_DIR $ORIGINAL_MEDIA_DIR" >&2
		exit 3
	fi
	wget http://freemusicarchive.org/music/download/"${MP3_FILE}"
	popd
fi

if [[ ! -f "${MP3_FILE}" ]] ; then
	echo "ERROR: failed to fetch mp3 test file $MP3_URL to local $MP3_FILE" >&2
	exit 4
fi

#if ! pushd "$TEST_DIR" ; then
#    echo "ERROR: failed to change directory to TEST_DIR $TEST_DIR" >&2
#    exit 5
#fi

cat writable_fields.lst \
| sed "s/\#.*//;/^[ \t]*$/d" \
| head -n 1000 \
| (
	num_tags=0
	num_passed=0
	num_failed=0
	test_result="passed"
	while read TAG ; do
		# handle exceptions
		case $TAG in
		APIC)
			# TODO: better APIC test with image verify
			VAL="http://www.w3.org/Graphics/PNG/alphatest.png"
			VAL="alphatest.png"
			;;
		*)
			VAL="VAL $TAG"
			;;
		esac
		if ./test1.sh "$MP3_FILE" "$TAG" "$VAL" ; then
			num_passed=$(expr $num_passed + 1)
		else
			num_failed=$(expr $num_failed + 1)
			test_result="failed"
		fi
		(( num_tags++ )) # bash iterator
		# num_tags=$(expr $num_tags + 1) # busybox-safe iterator
	done
	TRACE "Test Sequence complete: $num_passed tests passed, $num_failed tests failed, $num_tags total tags"
	if [[ "$test_result" == "passed" ]] ; then
		TRACE "END: ALL TESTS PASSED"
		exit 0
	else
		TRACE "END: AT LEAST 1 TEST FAILED"
		exit 1
	fi
)

exit $?
